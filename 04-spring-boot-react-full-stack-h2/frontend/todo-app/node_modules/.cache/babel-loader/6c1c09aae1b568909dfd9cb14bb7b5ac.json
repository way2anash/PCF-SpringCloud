{"ast":null,"code":"import _classCallCheck from \"/home/anash/Documents/workspace-spring-tool-suite-4-4.5.0.RELEASE/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anash/Documents/workspace-spring-tool-suite-4-4.5.0.RELEASE/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anash/Documents/workspace-spring-tool-suite-4-4.5.0.RELEASE/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anash/Documents/workspace-spring-tool-suite-4-4.5.0.RELEASE/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anash/Documents/workspace-spring-tool-suite-4-4.5.0.RELEASE/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/anash/Documents/workspace-spring-tool-suite-4-4.5.0.RELEASE/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/anash/Documents/workspace-spring-tool-suite-4-4.5.0.RELEASE/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/src/components/todo/TodoComponent.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nvar TodoComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoComponent, _Component);\n\n  function TodoComponent(props) {\n    var _this;\n\n    _classCallCheck(this, TodoComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoComponent).call(this, props));\n    _this.state = {\n      id: _this.props.match.params.id,\n      description: '',\n      targetDate: moment(new Date()).format('YYYY-MM-DD')\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TodoComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.state.id === -1) {\n        return;\n      }\n\n      var username = AuthenticationService.getLoggedInUserName();\n      TodoDataService.retrieveTodo(username, this.state.id).then(function (response) {\n        return _this2.setState({\n          description: response.data.description,\n          targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\n        });\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(values) {\n      var errors = {};\n\n      if (!values.description) {\n        errors.description = 'Enter a Description';\n      } else if (values.description.length < 5) {\n        errors.description = 'Enter atleast 5 Characters in Description';\n      }\n\n      if (!moment(values.targetDate).isValid()) {\n        errors.targetDate = 'Enter a valid Target Date';\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this3 = this;\n\n      var username = AuthenticationService.getLoggedInUserName();\n      var todo = {\n        id: this.state.id,\n        description: values.description,\n        targetDate: values.targetDate\n      };\n\n      if (this.state.id === -1) {\n        TodoDataService.createTodo(username, todo).then(function () {\n          return _this3.props.history.push('/todos');\n        });\n      } else {\n        TodoDataService.updateTodo(username, this.state.id, todo).then(function () {\n          return _this3.props.history.push('/todos');\n        });\n      }\n\n      console.log(values);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          description = _this$state.description,\n          targetDate = _this$state.targetDate; //let targetDate = this.state.targetDate\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Todo\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: {\n          description: description,\n          targetDate: targetDate\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(ErrorMessage, {\n          name: \"description\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"targetDate\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Description\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Target Date\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"date\",\n          name: \"targetDate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Save\"));\n      })));\n    }\n  }]);\n\n  return TodoComponent;\n}(Component);\n\nexport default TodoComponent;","map":{"version":3,"sources":["/home/anash/Documents/workspace-spring-tool-suite-4-4.5.0.RELEASE/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/src/components/todo/TodoComponent.jsx"],"names":["React","Component","moment","Formik","Form","Field","ErrorMessage","TodoDataService","AuthenticationService","TodoComponent","props","state","id","match","params","description","targetDate","Date","format","onSubmit","bind","validate","username","getLoggedInUserName","retrieveTodo","then","response","setState","data","values","errors","length","isValid","todo","createTodo","history","push","updateTodo","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport moment from 'moment'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass TodoComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            description: '',\n            targetDate: moment(new Date()).format('YYYY-MM-DD')\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount() {\n\n        if (this.state.id === -1) {\n            return\n        }\n\n        let username = AuthenticationService.getLoggedInUserName()\n\n        TodoDataService.retrieveTodo(username, this.state.id)\n            .then(response => this.setState({\n                description: response.data.description,\n                targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\n            }))\n    }\n\n    validate(values) {\n        let errors = {}\n        if (!values.description) {\n            errors.description = 'Enter a Description'\n        } else if (values.description.length < 5) {\n            errors.description = 'Enter atleast 5 Characters in Description'\n        }\n\n        if (!moment(values.targetDate).isValid()) {\n            errors.targetDate = 'Enter a valid Target Date'\n        }\n\n        return errors\n\n    }\n\n    onSubmit(values) {\n        let username = AuthenticationService.getLoggedInUserName()\n\n        let todo = {\n            id: this.state.id,\n            description: values.description,\n            targetDate: values.targetDate\n        }\n\n        if (this.state.id === -1) {\n            TodoDataService.createTodo(username, todo)\n                .then(() => this.props.history.push('/todos'))\n        } else {\n            TodoDataService.updateTodo(username, this.state.id, todo)\n                .then(() => this.props.history.push('/todos'))\n        }\n\n        console.log(values);\n    }\n\n    render() {\n\n        let { description, targetDate } = this.state\n        //let targetDate = this.state.targetDate\n\n        return (\n            <div>\n                <h1>Todo</h1>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ description, targetDate }}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <ErrorMessage name=\"targetDate\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <fieldset className=\"form-group\">\n                                        <label>Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Target Date</label>\n                                        <Field className=\"form-control\" type=\"date\" name=\"targetDate\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TodoComponent"]},"metadata":{},"sourceType":"module"}